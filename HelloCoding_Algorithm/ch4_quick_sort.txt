[Ch4 Quicksort, 퀵정렬]


01 Divde-and-Conquer, 분할 정복

p.69
분할 정복 전략은 재귀적 알고리즘입니다.


p.79
* pivot : 기준원소
* partitioning : 분할
* sub-array : 하위 배열


p.73
정리하자면 분할 정복 전략은 다음과 같이 동작합니다.
1. 가장 간단한 경우로 기본 단계를 찾습니다.
2. 여러분에게 주어진 문제를 작게 줄여서 기본 단계가 되도록 만드는 법을 찾아냅니다.

분할 정복 전략은 문제에 바로 적용할 수 있는 단순한 알고리즘이 아닙니다. 그보다는 문제를 풀기 위한 방법론에 가깝죠. ...

p.76
[NOTE]
배열을 포함하는 재귀 함수를 만들 때, 기본 단계는 보통 빈 배열이나 원소가 하나뿐인 배열이 됩니다. 만약 문제를 풀다 막히면 이 방법을 사용해 보세요.


* 4장에서 배운 내용
- 분할 정복은 문제를 더 작은 조각으로 나누어 풉니다. 만약 리스트에 분할 저복을 적용한다면 기본 단계는 원소가 없는 빈 배열이거나 하나의 원소만 가진 배열이 됩니다.
- 퀵 정렬을 구현하려면 기준 원소를 무작위로 선택합니다. 퀵 정렬의 평균적인 실행 시간은 O(nlogn)입니다!
- 빅오 표기법에서 가끔씩 상수가 중요해질 때도 있습니다. 퀵 정렬이 병합 정렬보다 빠른 이유도 상수 때문입니다.
- 단순 탐색과 이진 탐색을 비교할 때는 상수항이 전혀 문제가 되지 않습니다. 왜냐하면 리스트가 길어지면 O(logn)이 O(n)보다 훨씬 빨라지니까요.
