[Ch6 Breadth-first Search, 너비 우선 탐색]


* 최단 경로 문제, Shortest-path problem

* 그래프, graph
- 정점, node
- 간선, edge
- 이웃, neighbor : 이어진 정점


* 너비 우선 탐색은 두 가지 질문에 대해 대답할 수 있음
1. 정점 A에서 정점 B로 가는 경로가 존재하는가? (여러분의 네트워크에 망고 판매상이 있는가?)
2. 정점 A에서 정점 B로 가는 최단 경로는 무엇인가? (누가 가장 가까운 망고 판매상인가?)


* 큐, Queue
- 큐는 큐 안의 원소에 임의로 접근할 수 없다는 점에서 스택과 비슷합니다.
- 삽입, enqueue / 푸시, Push
- 제거, dequeue / 팝, pop
- 선입 선출 자료구조, FIFO(First In First Out)


* 스택, Stack
- 후입 선출 자료구조, LIFO(Last In First Out)


* 그래프의 종류
- 방향 그래프, Directed graph
- 무방향 그래프, Undirected graph

p.142
무방향 그래프(undirected graph)는 화살표(방향성)를 가지지 않기 때문에 이어진 두 정점은 서로 이웃이 됩니다.

p.153
* 트리, Tree
거꾸로 가는 간선이 없는 특별한 종류의 그래프


p.148
실행시간

* 네트워크 전체를 탐색 = O(간선의 개수)
(모든 정점을 따라서 움직임)
 * 큐에 사람을 추가 = O(사람의 수)

너비우선탐색 실행시간 = O(사람의 수 + 간선의 수) -> O(V+E)
