[Ch7 Dijkstra's Algorithm]

p.162
다익스트라 알고리즘은 다음 4개의 단계로 이루어집니다.

1. 가장 가격이 싼 정점, 즉 도달하는 데 시간이 가장 적게 걸리는 정점을 찾습니다.
2. 이 정점의 이웃 정점에 대해 현재의 가격보다 더 싼 경로가 존재하는지 확인합니다. 만약 존재한다면 가격을 수정합니다.
3. 그래프 상의 모든 정점에 대해 이러한 일을 반복합니다.
4. 최종 경로를 계산합니다.


* 가중 그래프, weighted graph 가중치를 가지는 그래프

* 균일 그래프, unweighted graph 가중치가 없는 그래프

* 싸이클, cycle 두 정점이 서로를 향하고 있는 그래프, 무방향 그래프 사이클은 그래프가 어떤 정점에서 출발해서 한 바퀴 돌아 같은 정점에서 끝난다는 뜻입니다.
 
p.165
다익스트라 알고리즘은 방향성 비순환 그래프(DAG, Directed Acyclic Graph)또는 사이클을 가진 경우에는 가중치가 양수일 때만 적용됩니다.


p.168
"1단계: 가장 가격이 싼 정점을 찾습니다. 이 경우에는 포스터가 0달러로 가장 쌉니다. 포스터를 더 싼 가격에 살 수 있는 다른 방법이 있나요? 이건 정말 중요한 문제이기 때문에 좀 더 생각해 보도록 합시다. 라마가 0달러보다 더 싸게 포스터를 살 수 있는 다른 경로가 있나요? 답은 "없다"입니다. 포스터는 라마가 도달할 수 있는 가장 싼 정점이기 때문에 더 싸게 만들 수는 없습니다. 이것을 다른 관점에서 바라보겠습니다. 여러분이 집에서 회사로 가고 있다고 가정합시다.
...
이 부분이 다익스트라 알고리즘의 핵심 아이디어입니다. 그래프에서 가장 가격이 싼 정점을 찾는 것입니다. 그 가격보다 더 싸게 그 정점에 도달하는 방법은 없습니다."


p.172
지금까지 두 지점 혹은 두 사람의 거래를 최소화하는 경로로서 최단 경로라는 용어를 사용해왔는데, 이 예제를 통해 최단 경로라는 것이 반드시 거리를 최소화하는 것이 아니라는 것을 알게 되었길 바랍니다. 최단이란 말은 무언가를 최소화한다는 의미입니다. 이 경우, 라마는 써야할 돈을 최소화하고 싶었던 거죠. 이렇듯 다익스트라 알고리즘을 사용하면 최소화가 가능합니다.


p.180
* 정점의 가격 출발점에서 그 정점까지 도달하는데 걸리는 시간



181027
다익스트라 알고리즘 코드에서 배우고 갈 것.

1. list.insert(0, element)
 2. 해시테이블 안의 해시테이블 (딕셔너리 안의 딕셔너리)
    Graph
    graph = {}
    # node start
    graph['start'] = {}
    graph['start']['a'] = 2
    graph['start']['b'] = 2
 3. graph[node].keys()
 4. lowest_cost = float('inf')

5. node = next_node(costs)처럼 costs를 parameter로 전달하는 것과     전달된 costs의 내부 값을 변경할 수 있는 사실
