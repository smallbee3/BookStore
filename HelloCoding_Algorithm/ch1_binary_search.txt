[Ch1 Binary Search, 이진 탐색]

02 Binary Search, 이진 탐색

p.6
* 탐색, search
* 단순 탐색, simple search


p.8
* 로그
로그가 어떤 것인지는 몰라도 거듭제곱은 알고 있죠? log₁₀100 이라는 수는 "10을 몇 번 곱해야 100이 될까?"하고 묻고 있는 거예요. 10 x 10이니까 답은 2입니다. 그러니까 log₁₀ 100=2가 되는 것이죠. 즉, 로그는 거듭제곱의 반대말입니다.
...
이 책에서 잠시 후에 빅오 표기법을 사용해서 실행 시간을 나타내는 방법을 알아볼 텐데, 이때 모든 log 함수는 log₂를 뜻합니다. ...

(* 밑이 10인 로그 = 상용로그, common logarithm)


* log란? "...상용로그에서, 로그3을 구하는 것은, 10의 "몇승"이 3인지를 알아내는 것입니다. "몇승"과 "몇제곱"은 같은 말입니다.
즉, 로그 값 구하기는 "몇승?" 구하기입니다.
...
로그는 함수입니다. 뭔가를 입력하면 출력이 나오기 때문입니다. 로그 함수는 너무 커서 다루기 힘든 숫자를 작게 축소하여 "모형"을 만드는 기능을 합니다. 로그 함수에 수박을 넣으면 콩알이 튀어나오는, 또는 콩알만한 수박이 튀어나오는 함수라고 보면 됩니다.
예를 들어 1000000000000000 (천조) 라는 아주 큰 수가 있습니다. 영이 15개 붙어 있습니다.
Log(천조) = 15
입니다. 아주 큰 숫자가 15라는 작은 숫자로 변했습니다. 10의 15승이 천조입니다.
다음의 로그 함수 그래프를 보면 알 수 있듯이, 로그 함수는 큰 숫자를 넣으면 넣을수록 y값이 즉 함수 출력 값이 서서히 증가하는 성질을 가지고 있습니다. 따라서 로그 함수에 아무리 큰 숫자를 넣어도 출력은 별로 큰 값이 나오지 않습니다. 천문학 등에서 유용하게 사용할 수 있겠지요."
http://mwultong.blogspot.com/2008/03/log.html


* 배열이 0부터 시작하는 이유?
 하드웨어
http://egloos.zum.com/redpain/v/3802108

 소프트웨어
0부터 시작하고 끝 인덱스가 영역에 포함이 안 되는 것은 여러가지 장점이 있습니다.
1. 길이를 잴 때 끝 인덱스에서 앞 인덱스를 빼면 된다는 점이 간편합니다. 불필요하게 +1을 하지 않아도 됩니다. length := end - start와 같은 형태가 됩니다. 
2. 1을 생각해 볼 때, 시작 인덱스와 길이를 알 때 단순히 둘을 더하면 끝 인덱스가 나오므로 -1을 하지 않아도 되어서 수식이 더 간단해 집니다. 영역이 start:start+length가 되는 거죠. ...
https://only2sea.wordpress.com/2016/03/24/%EB%B0%B0%EC%97%B4%EC%9D%98-%EC%9D%B8%EB%8D%B1%EC%8A%A4%EC%99%80-%EA%B5%AC%EA%B0%84/


* Bg O notation  p.18
최악의 실행 시간을 나타내는 빅오 표기법
...
단순 탐색이 절대로 O(n) 시간보다 느려지지 않는다는 일종의 보장이 되는 것이죠.


p.20
* 알고리즘의 속도는 시간이 아니라 연산 횟수가 어떻게 증가하는지로 측정합니다.


p.20
*  외판원 문제, traveling salesperson problem
